/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.behemehal.wolejava;

import java.net.DatagramPacket;
import java.net.DatagramSocket;
import java.net.InetAddress;
import java.net.InetSocketAddress;
import java.net.SocketAddress;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author ahmet
 * Built by hate
 */
public class Main extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
        jTextArea1.append("[Wole (Java Version v1)]\nAhmetcan Aksu Dönem Ödevi\n\nLütfen bir mac adresi ve ip girin\neğer hedeflenen makinanın bios ayarladında wol aktifse bilgisayar uyandırılacaktır.");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jButton1.setText("Uyandır");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextField1.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        jTextField1.setToolTipText("Lütfen bir mac adresi girin");

        jTextField2.setText("192.168.1.");
        jTextField2.setToolTipText("Lütfen bir ip girin");

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jLabel1.setText("Ip Adresi");

        jLabel2.setText("Mac Adresi");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 10, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 622, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addGap(285, 285, 285))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTextField2)
                        .addContainerGap())
                    .addComponent(jTextField1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addGap(5, 5, 5)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private byte[] generateMagicPackage(String unformated_mac_address) {
        byte[] magicPackage = null;
        if (unformated_mac_address.contains(":") && unformated_mac_address.split(":").length == 6) {
            String mac_address = String.join("", unformated_mac_address.split(":"));
            magicPackage = new byte[102];
            for (int e = 0; e < 17; e++) {
                for (int i = 0; i < 6; i++) {
                    if (e == 0) {
                        magicPackage[0] = (byte) 0xff;
                    } else {
                        String mac_splited = mac_address.substring(i * 2, i * 2 + 2);
                        byte c = (byte) Integer.parseInt(mac_splited, 16);
                        magicPackage[i + e * 6] = c;
                    }
                }
            }
        }

        return magicPackage;
    }

    boolean mesgul = false;

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        if (!mesgul) {
            jTextArea1.removeAll();
            jButton1.setEnabled(false);
            mesgul = true;
            DatagramSocket socket = null;
            InetAddress address = null;
            SocketAddress bind = null;
            byte[] magicPackage = null;
            try {
                socket = new DatagramSocket();

            } catch (SocketException ex) {
                jTextArea1.append("[HATA]: Paket gönderimi için udp client başlatılamadı. Muhtemel izin sorunu\n");
            }

            if (socket != null) {
                try {
                    address = InetAddress.getByName(jTextField2.getText());
                    bind = new InetSocketAddress(InetAddress.getByName("0.0.0.0"), 0);
                } catch (Exception ex) {
                    jTextArea1.append("[HATA]: Verilen IP hatalı\n");
                }

                if (address != null) {
                    try {
                        magicPackage = generateMagicPackage(jTextField1.getText());
                        socket.setBroadcast(true);
                    } catch (Exception e) {
                        jTextArea1.append("[HATA]: Verilen Mac hatalı\n");
                    }

                    if (magicPackage != null) {
                        jTextArea1.append("[Bilgi]: Paket Oluşturuldu\n");

                        DatagramPacket[] packages = {
                            new DatagramPacket(magicPackage, magicPackage.length, address, 7),
                            new DatagramPacket(magicPackage, magicPackage.length, address, 40557),
                            new DatagramPacket(magicPackage, magicPackage.length, address, 47536),
                            new DatagramPacket(magicPackage, magicPackage.length, address, 44099),
                            new DatagramPacket(magicPackage, magicPackage.length, address, 38482),
                            new DatagramPacket(magicPackage, magicPackage.length, address, 9)
                        };
                        int gonderilenPaket = 0;

                        for (DatagramPacket i : packages) {
                            jTextArea1.append("[Bilgi]: Paket gönderiliyor\n");
                            try {
                                socket.send(i);
                                jTextArea1.append(String.format("   - : Paket Gönderildi: %s:%s\n", i.getAddress(), i.getPort()));
                                gonderilenPaket++;
                            } catch (Exception e) {
                                jTextArea1.append(String.format("[Uyarı]: Paket Gönderilemedi: %s:%s\n", i.getAddress(), i.getPort()));
                            }
                        }

                        if (gonderilenPaket == 0) {
                            jTextArea1.append("[Hata]: Hiçbir paket gönderilemedi, muhtemel hedef ulaşılamadı\n");
                        } else if (gonderilenPaket == 6) {
                            jTextArea1.append("[Başarılı]: Tüm paketler gönderildi\n");
                        } else {
                            jTextArea1.append(String.format("[Başarılı]: Hedeflenen 6 paketten: %d tanesi gönderildi\n", gonderilenPaket));
                        }

                        jTextArea1.append("[Başarılı]: Soket kapandı\n");
                        socket.close();
                    } else {
                        jTextArea1.append(String.format("[HATA]: Verilen Mac hatalı: '%s' Örnek mac: 'XX:XX:XX:XX:XX:XX'\n", jTextField1.getText()));
                    }
                }

            }
            jButton1.setEnabled(true);
            mesgul = false;
        } else {
            jTextArea1.append("[Uyarı]: Meşgul\n");
        }
    }//GEN-LAST:event_jButton1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
